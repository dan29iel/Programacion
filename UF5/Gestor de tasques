package task.management;

import java.util.HashMap;
import java.util.ArrayList
import java.util.Scanner;

class Tasca {
    private static int cont = 0;
    private int id;
    private String descripcio;
    private boolean tasca_completada;
    private String prioritat;

    public Tasca(String descripcio, String prioritat) {
        this.id = ++cont;
        this.descripcio = descripcio;
        this.tasca_completada = false;
        this.prioritat = prioritat;
    }

    public void marcarTascaCompletada() {
        this.tasca_completada = true;
    }

    public int getID() {
        return this.id;
    }

    public getDescripcio() {
        return this.descripcio;
    }

    public boolean estaCompletada() {
        return this.tasca_completada;
    }

    public String getPrioritat() {
        return this.prioritat;
    }

    public String toString() {
        String estat_tasca = tasca_completada ? "Completada" : "Pendent";
        return "ID: " + id + ", Descripcio: " + descripcio + ", Prioritat: " + prioritat + ", Estat: " + estat_tasca;
    }
}

class GestorTasques {
    private static final String MSG_1 = "baixa";
    private static final String MSG_2 = "mitjana";
    private static final String MSG_3 = "alta";
    private HashMap<String, ArrayList<Tasca>> llistaPrioritat;
    private HashMap<Integer, Tasca> tasques;
    private Scanner scanner;

    public GestorTasques() {
        llistaPrioritat = new HashMap<>();
        llistaPrioritat.put(MSG_1, new ArrayList<>());
        llistaPrioritat.put(MSG_2, new ArrayList<>());
        llistaPrioritat.put(MSG_3, new ArrayList<>());
        tasques = new HashMap<>();
        scanner = new Scanner(System.in);
    }

    public void afegirTasca(String descripcio, String prioritat) {
        Tasca tasca = new Tasca(descripcio, prioritat);
        llistaPrioritat.get(prioritat).add(tasca);
        tasques.put(tasca.getId(), tasca);
    }

    public void marcarTascaCompletada(int idTasca) {
        Tasca tasca = tasques.get(idTasca);
        if (tasca != null) {
          tasca.marcarTascaCompletada();
        }
    }

    public void esborrarTasca(int idTasca) {
        Tasca tasca = tasques.remove(idTasca);
        if (tasca != null) {
            String prioritat = tasca.getPrioritat();
            llistaPrioritat.get(prioritat).remove(tasca);
        }
    }

    public void mostrarTotesLesTasques() {
        System.out.println("Totes les tasques:");
        for (Tasca tasca : tasques.values()) {
            System.out.println(tasca);
        }
    }

    public void mostrarTasquesPerPrioritat(String prioritat) {
        System.out.println("Tasques de prioritat " + prioritat + ":");
        for (Tasca tasca : llistaPrioritat.get(prioritat)) {
            System.out.println(tasca);
        }
    }

    public void sortir() {
        scanner.close();
        System.exit(0);
    }
}
        
    







