Per fer aquesta activitat he seguit el model de les activitats Gestor de Tasques y Sistema de Registre d'estudiants y he implementat el codi per la carrega del arxiu xml per tal de que es registrin el dos primers personatges.
Aquest programa mostrara un menú de 4 opcions, al executarlo primerament carregara els dos primers personatges del joc, després tindras les opcions disponibles per tal d'afegir personatges nou, poder modificar alguna caracter-
ristica d'algun d'ells y poder llistar tots el personatges disponibles en el joc amb les seves caracteristiques i finalment tindràs la opció de sortir de joc.

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

class Personatge {               //Definim les 5 variables d'instancia del personatge.
    private String nom;
    private int nivell;
    private int vida;
    private int mana;
    private String arma;
    private String armadura;

    public Personatge(String nom, int nivell, int vida, int mana, String arma, String armadura) {           //Constructor de la classe i inicialitzem les varibles d'instancia.
        this.nom = nom;
        this.nivell = nivell;
        this.vida = vida;
        this.mana = mana;
        this.arma = arma;
        this.armadura = armadura;
    }

    public String getNom() {                  //Metodes d'accés (getters i setters) per les varibles del personatges.
        return nom;
    }

    public void setNom(String nom) {
        this.nom = nom;
    }

    public int getNivell() {
        return nivell;
    }

    public void setNivell(int nivell) {
        this.nivell = nivell;
    }

    public int getVida() {
        return vida;
    }

    public void setVida(int vida) {
        this.vida = vida;
    }

    public int getMana() {
        return mana;
    }

    public void setMana(int mana) {
        this.mana = mana;
    }
    
    public String getArma() {
        return arma;
    }
    
    public void setArma(String arma) {
        this.arma = arma;
    }
    
    public String getArmadura() {
        return armadura;
    }
    
    public void setArmadura(String armadura) {
        this.armadura = armadura;
    }
}

class GestioPersonatges {                     //Declarem la llista de les caracteristiques del personatge.
    private List<Personatge> personatges;
    private Scanner scanner;

    public GestioPersonatges() {                     //Declarem el constructor de la classe GestioPersonatges per inicialitzar la llista i truca al metode carregarPersonatges amb la ruta del arxiu xml.
        this.personatges = new ArrayList<>();
        this.scanner = new Scanner(System.in);
        carregarPersonatges("C:\\Users\\danie\\personatges.xml");
    }

    public void carregarPersonatges(String archivoXML) {          //Metode per carregar el personatges desde l'arxiu XML.
        try {
            File arxiuXML = new File("C:\\Users\\danie\\personatges.xml");             //Crearem l'objecte File utilitzant la ruta.
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();     //Instanciem l'objecte DocumentBuilderFactory i despres creem el DocumentBuilder.
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document doc = builder.parse(arxiuXML);
            NodeList llistaPersonatges = doc.getElementsByTagName("personatge");       //Obtenim la llista de personatges, es a dir, els nodes del document XML.

            for (int i = 0; i < llistaPersonatges.getLength(); i++) {                  //Fem la iteració de la llista de personatges
                Node n = llistaPersonatges.item(i);
                if (n.getNodeType() == Node.ELEMENT_NODE) {                            //Verifiquem si el node és ELEMENT_NODE
                    Element registre = (Element) n;
                    String nom = registre.getElementsByTagName("nom").item(0).getTextContent();       //Extreurem els valors de les 5 acaracteristiques dels personatges amb els mateix noms que hi ha en el document XML.
                    int nivell = Integer.parseInt(registre.getElementsByTagName("nivell").item(0).getTextContent());
                    int vida = Integer.parseInt(registre.getElementsByTagName("puntsDeVida").item(0).getTextContent());
                    int mana = Integer.parseInt(registre.getElementsByTagName("puntsDeMana").item(0).getTextContent());
                    String arma = registre.getElementsByTagName("arma").item(0).getTextContent();
                    String armadura = registre.getElementsByTagName("armadura").item(0).getTextContent();
                    personatges.add(new Personatge(nom, nivell, vida, mana, arma, armadura));         //Afegim els valors a la llista personatges. 
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void inserirPersonatge() {                 //Creem el metode per poder inserir el personatges manualment amb les seves 5 caracteristiques.
        System.out.print("Nom del personatge: ");
        String nom = scanner.nextLine();
        System.out.print("Nivell del personatge: ");
        int nivell = scanner.nextInt();
        System.out.print("Vida del personatge: ");
        int vida = scanner.nextInt();
        System.out.print("Mana del personatge: ");
        int mana = scanner.nextInt();
        scanner.nextLine();
        System.out.print("Arma del personatge: ");
        String arma = scanner.nextLine();
        System.out.print("Armadura del personatge: ");
        String armadura = scanner.nextLine();
        personatges.add(new Personatge(nom, nivell, vida, mana, arma, armadura));     //Creem el nou personatges amb les caracteristiques escollides.
        System.out.println("Personatge registrat");
    }

    public void mostrarPersonatges() {                  //Mostrem per consola els personatges disponibles amb les seves 5 caracteristiques.
        System.out.println("Personatges disponibles:");
        for (Personatge personatge : personatges) {
            System.out.println("Nom: " + personatge.getNom() + ", Nivell: " + personatge.getNivell() + ", Vida: " + personatge.getVida() + ", Mana: " + personatge.getMana() + ", Arma: " + personatge.getArma() + ", Armadura: " + personatge.getArmadura());
        }
    }

    
    
